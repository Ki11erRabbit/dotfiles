
# nop %sh{
#     mkdir -p "$kak_config/autoload"
#     ln -s "$kak_runtime/rc" "$kak_config/autoload/standard-library"
# }

# Set the colour scheme
#colorscheme doom-one
colorscheme catppuccin_latte

# Width of a tab
set-option global tabstop 4

# Indent with 4 spaces
set-option global indentwidth 4

# Always keep one line and three columns displayed around the cursor
set-option global scrolloff 1,3

# Display the status bar on top
set-option global ui_options ncurses_status_on_top=true

# Display line numbers
add-highlighter global/ number-lines -hlcursor

# Highlight trailing whitespace
add-highlighter global/ regex \h+$ 0:Error

# Softwrap long lines
add-highlighter global/ wrap -word -indent

# Clipboard management mappings
map -docstring "yank the selection into the clipboard" global user y "<a-|> xsel -i<ret>"
map -docstring "paste the clipboard" global user p "<a-!> xsel<ret>"

# Shortcut to quickly exit the editor
define-command -docstring "save and quit" x "write-all; quit"




evaluate-commands %sh{
  # We're assuming the default bundle_path here...
  plugins="$kak_config/bundle"
  mkdir -p "$plugins"
  [ ! -e "$plugins/kak-bundle" ] && \
    git clone -q https://github.com/jdugan6240/kak-bundle "$plugins/kak-bundle"
  printf "%s\n" "source '$plugins/kak-bundle/rc/kak-bundle.kak'"
}

bundle-noload kak-bundle https://github.com/jdugan6240/kak-bundle

bundle kakboard https://github.com/lePerdu/kakboard/ %{
    hook global WinCreate .* %{ kakboard-enable }
}

bundle kakoune-registers https://github.com/Delapouite/kakoune-registers

bundle-install-hook kakoune-lsp %{
    cargo install --locked --force --path .
    # optional: if you want to use specific language servers
    mkdir -p ~/.config/kak-lsp
    cp -n kak-lsp.toml ~/.config/kak-lsp/
}

bundle auto-pairs.kak https://github.com/alexherbo2/auto-pairs.kak %{
    hook global WinCreate .* %{ enable-auto-pairs }
}

bundle prelude.kak https://github.com/kakounedotcom/prelude.kak

bundle connect.kak https://github.com/kakounedotcom/connect.kak

bundle parinfer-rust https://github.com/eraserhd/parinfer-rust %{
    hook global WinSetOption filetype=(clojure|lisp|scheme|racket) %{
        parinfer-enable-window -smart
    }
}
bundle-install-hook parinfer-rust %{
    cargo install --force --path .
}

bundle kak-rainbow https://github.com/Bodhizafa/kak-rainbow %{
	hook global WinSetOption filetype=(koka|rust|python|c|c++|scheme|lisp|clojure|javascript|json|coq) %{
        rainbow-enable-window
	}
}

bundle kak-tree-sitter https://sr.ht/~hadronized/kak-tree-sitter/
bundle-install-hook kak-tree-sitter %{
    cargo install kak-tree-sitter
    cargo install ktsctl
}

bundle coqoune https://github.com/guest0x0/coqoune %{}

bundle-install-hook coqoune %{
    make
}

hook global WinSetOption filetype=coq %{
    coq-start
	declare-user-mode coq

	map buffer user c ": enter-user-mode coq<ret>" \
        -docstring "enter the Coq user mode"

    map buffer coq c ": enter-user-mode -lock coq<ret>" \
        -docstring "stay in the Coq user mode"

    map buffer coq k ": coq-back<ret>" \
        -docstring "undo last sent command"

    map buffer coq j ": coq-next<ret>" \
        -docstring "send the next command to Coq"

    map buffer coq <ret> ": coq-to-cursor<ret>" \
        -docstring "move tip to main cursor"
}


bundle kakoune-lsp https://github.com/kakoune-lsp/kakoune-lsp %{
}
bundle-install-hook kakoune-lsp %{
    cargo install --locked --force --path .
}
eval %sh{kak-lsp --kakoune -s $kak_session}  # Not needed if you load it with plug.kak.
lsp-enable

hook global WinSetOption filetype=<language> %{
  hook window -group semantic-tokens BufReload .* lsp-semantic-tokens
  hook window -group semantic-tokens NormalIdle .* lsp-semantic-tokens
  hook window -group semantic-tokens InsertIdle .* lsp-semantic-tokens
  hook -once -always window WinSetOption filetype=.* %{
    remove-hooks window semantic-tokens
  }
}





